name: Semgrep Security Analysis

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:  # Allow manual triggering

jobs:
  semgrep:
    name: Semgrep Security Scan
    runs-on: ubuntu-latest
    
    # Add timeout to prevent hanging jobs
    timeout-minutes: 30
    
    # Use concurrency to cancel in-progress jobs on new commits
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    
    permissions:
      actions: read
      contents: read
      security-events: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch at least the immediate parents for better context
          fetch-depth: 2
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install Semgrep
        run: |
          python -m pip install --upgrade pip
          pip install semgrep
      
      - name: Semgrep scan
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
        run: |
          # Run Semgrep with comprehensive configuration
          semgrep ci \
            --config auto \
            --sarif \
            --output semgrep.sarif \
            --baseline-commit ${{ github.event.pull_request.base.sha || github.event.before }} \
            --verbose \
            --metrics off
      
      - name: Upload SARIF to code scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif
          category: "semgrep"
      
      - name: Comment PR with findings
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const sarif = JSON.parse(fs.readFileSync('semgrep.sarif', 'utf8'));
            
            let findings = 0;
            if (sarif.runs && sarif.runs[0] && sarif.runs[0].results) {
              findings = sarif.runs[0].results.length;
            }
            
            const comment = `## Semgrep Security Scan Results
            
            üîç **${findings} security findings** detected
            
            ${findings > 0 
              ? '‚ö†Ô∏è Please review the findings in the Security tab above.' 
              : '‚úÖ No security issues found!'}
            
            _This scan was performed by Semgrep with auto-configuration._`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
