name: Python Lint, Fast Tests, and Slow Tests
# NOTE FOR LOCAL CI (act):
# - The pre-push Git hook (.git/hooks/pre-push) runs:
#     act pull_request -j lint_and_fast_tests --pull=false --log-prefix-job-id
#   so local pushes mimic the 'lint_and_fast_tests' job for PRs.
# - To run this workflow manually with act:
#     act pull_request -j lint_and_fast_tests

on:
  pull_request:
    branches: [main, dev]
  workflow_dispatch: # Allows manual triggering for slow tests
  schedule:
    - cron: "0 2 * * 0" # Weekly on Sunday at 2 AM for slow tests

jobs:
  lint_and_fast_tests:
    name: Lint and Fast Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Ruff static analysis
        run: |
          ruff check .
      - name: Ruff formatting check
        run: |
          ruff format --check .
      - name: Run fast tests
        run: |
          # This command runs all tests NOT marked as 'slow'
          # based on the configuration in pytest.ini
          # In both GitHub and act (local), generate HTML & JUnit under reports/
          python -m pytest --html=reports/report.html --self-contained-html --junitxml=reports/junit.xml

      - name: Upload fast test reports
        # Skip under act (local GitHub Actions emulator) because ACTIONS_RUNTIME_TOKEN is not available.
        # On real GitHub runners, this will upload the reports/ directory as a build artifact.
        if: ${{ always() && !env.ACT }}
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-fast
          path: reports/

  slow_tests:
    name: Slow Integration Tests
    # This job runs only on schedule or when manually dispatched.
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    needs: lint_and_fast_tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        # Python is needed for the runner environment, but dependencies are inside the container
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dev test dependencies on host
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Build and start container stack
        run: |
          docker compose -f docker/docker-compose.yml up -d --build
      - name: Wait for Weaviate readiness
        run: |
          timeout=120; until curl -s http://localhost:8080/v1/.well-known/ready >/dev/null 2>&1; do \
            echo "Waiting for Weaviate..."; sleep 5; timeout=$((timeout-5)); if [ $timeout -le 0 ]; then echo "Weaviate not ready"; docker compose -f docker/docker-compose.yml logs weaviate; exit 1; fi; done
      - name: Run slow tests on host
        run: |
          set -o pipefail
          # Ensure the app image is rebuilt without cache for packaging regressions
          docker compose -f docker/docker-compose.yml build --no-cache app
          # This command runs ONLY tests marked as 'slow' on the host runner
          python -m pytest -sv -m slow \
            --html=reports/report_slow.html --self-contained-html --junitxml=reports/junit_slow.xml | tee pytest.log
          EXIT_CODE=${PIPESTATUS[0]}
          if [ $EXIT_CODE -ne 0 ]; then
            echo -e "\nðŸ”´ Pytest failed â€” showing container logs for debugging:\n"
            docker compose -f docker/docker-compose.yml logs app || true
            docker compose -f docker/docker-compose.yml logs weaviate || true
            docker compose -f docker/docker-compose.yml logs ollama || true
            exit $EXIT_CODE
          fi
      - name: Upload slow test reports
        # Same: upload only on GitHub (not in act) due to missing ACTIONS_RUNTIME_TOKEN locally.
        if: ${{ always() && !env.ACT }}
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-slow
          path: reports/
      - name: Tear down stack
        if: always()
        run: |
          docker compose -f docker/docker-compose.yml down -v
