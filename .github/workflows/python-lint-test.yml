name: Python Lint and Test

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies (online only)
        if: env.ACT != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install ruff
      - name: Ruff static analysis
        run: |
          ruff check .
      - name: Ruff formatting check
        run: |
          ruff format --check .
      #- name: Run tests
      #  run: |
      #    python -m pytest || true

  integration-tests:
    needs: lint-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest

      - name: Set Ollama CPU image for CI only
        if: env.ACT != 'true'
        run: echo "OLLAMA_IMAGE=ollama/ollama:latest-cpu" >> $GITHUB_ENV
      - name: Build and start container stack
        run: |
          docker compose -f docker/docker-compose.yml up -d --build
      - name: Wait for Weaviate readiness
        run: |
          timeout=120; until curl -s http://localhost:8080/v1/.well-known/ready >/dev/null 2>&1; do \
            echo "Waiting for Weaviate..."; sleep 5; timeout=$((timeout-5)); if [ $timeout -le 0 ]; then echo "Weaviate not ready"; docker compose -f docker/docker-compose.yml logs weaviate; exit 1; fi; done
      - name: Run integration tests
        run: |
          pytest tests/test_cli_script_integration.py -q
      - name: Tear down stack
        if: always()
        run: |
          docker compose -f docker/docker-compose.yml down -v
