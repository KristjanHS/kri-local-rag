---
description: "Rules for testing Python code"
type: agent-select
globs:
  - "tests/**/*.py"
  - "**/*_test.py"
alwaysApply: false
---
- Write unit tests for your functions and components.
- Ensure your app works as expected with LangChain through integration tests.
- Run tests using `python -m pytest tests/`.
 - Tag tests with pytest markers (see `pyproject.toml` [tool.pytest.ini_options] and `docs_AI_coder/AI_instructions.md` â†’ Testing):
   - Unit: `pytestmark = pytest.mark.unit` in `tests/unit/`
   - Integration: `@pytest.mark.integration` in `tests/integration/`
   - E2E: `@pytest.mark.e2e` (+ `@pytest.mark.slow` if long) in `tests/e2e*`
   - Environment: `@pytest.mark.environment` in `tests/environment/`
 - Default excludes `slow`; include with: `python -m pytest -m slow`
 - Network policy for unit tests (pytest-socket):
   - Unit tests must not perform real network I/O. Global block is enforced via `--disable-socket` and a session fixture.
   - To temporarily allow sockets in a single test, use the `allow_network` fixture: `def test_x(allow_network): ...`.
   - Any test that truly needs network should move to `tests/integration/` and/or be marked `@pytest.mark.integration` instead of using `allow_network`.
   - When debugging flakiness, set `UNITNETGUARD_FAIL_FAST=1` to enable fail-fast detection of socket re-enablement.
