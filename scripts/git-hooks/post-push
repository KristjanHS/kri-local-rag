#!/usr/bin/env bash
# Post-push hook: runs integration tests after push
# This ensures code quality without the complexity of automatic PR creation

set -Eeuo pipefail

ROOT_DIR="$(git rev-parse --show-toplevel 2>/dev/null || pwd)"
cd "$ROOT_DIR"

# shellcheck source=../scripts/common.sh
source "$ROOT_DIR/scripts/common.sh"

script_name="post-push"
LOG_FILE=$(init_script_logging "$script_name")
enable_error_trap "$LOG_FILE" "$script_name"

# Mirror all stdout/stderr to the log file
exec > >(tee -a "$LOG_FILE") 2>&1

log INFO "Post-push hook triggered (repo: $ROOT_DIR)"

if [[ "${SKIP_POST_PUSH_TESTS:-0}" == "1" ]]; then
  log WARN "SKIP_POST_PUSH_TESTS=1 — skipping local integration tests"
  exit 0
fi

if [[ ! -x ".venv/bin/python" ]]; then
  log ERROR ".venv/bin/python not found — cannot run integration tests"
  log INFO "Create venv: python3 -m venv .venv && .venv/bin/pip install -r requirements-dev.txt"
  echo -e "\033[31m✗ Integration tests setup failed: Missing .venv/bin/python\033[0m"
  exit 1
fi

log INFO "Running integration tests..."
# Use the dedicated test notification script
if [[ -x "scripts/dev/test-notification.sh" ]]; then
  # Use the new notification script
  scripts/dev/test-notification.sh integration
  TEST_RC=$?
else
  # Fallback to original method
  log INFO "Running local integration tests via .venv/bin/python …"
  mkdir -p reports || true
  # Allow optional extra pytest args via POST_PUSH_PYTEST_ARGS
  EXTRA_ARGS=${POST_PUSH_PYTEST_ARGS:-}
  CMD=( .venv/bin/python -m pytest tests/integration -q ${EXTRA_ARGS} )
  log INFO "Command: ${CMD[*]}"
  set -o pipefail
  "${CMD[@]}" 2>&1 | sed 's/^/[integration-local] /' || true
  TEST_RC=${PIPESTATUS[0]:-1}
  
  if [[ $TEST_RC -eq 0 ]]; then
    log INFO "Post-push: integration tests passed ✓"
    echo -e "\033[32m✓ Integration tests passed\033[0m"
  else
    log ERROR "Post-push: integration tests failed (exit $TEST_RC)."
    log INFO "Fix the failing tests and push again."
    echo -e "\a\033[31m✗ Integration tests failed (exit $TEST_RC)\033[0m"
    echo -e "\033[33mCheck the logs above and fix the failing tests.\033[0m"
    echo -e "\033[33mLog file: $LOG_FILE\033[0m"
  fi
fi

log INFO "Ready for manual PR creation when needed: gh pr create --fill"

exit "$TEST_RC"
