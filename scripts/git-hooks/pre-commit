#!/usr/bin/env bash
# .git/hooks/pre-commit - Run pre-commit framework with advanced options
set -Eeuo pipefail

# Source the shared config file
# shellcheck source=../scripts/common.sh
source "$(git rev-parse --show-toplevel)/scripts/common.sh"

# --- Start Logging ---
script_name="pre-commit"
LOG_FILE=$(init_script_logging "$script_name")
enable_error_trap "$LOG_FILE" "$script_name"
# --- End Logging ---

# Ensure we are in the project root
cd "$(git rev-parse --show-toplevel)"

log INFO "⏳ Running pre-commit framework with advanced checks..."

# Check if pre-commit is installed
if ! command -v pre-commit >/dev/null 2>&1; then
    log ERROR "❌ pre-commit framework not found. Install with: make uv-sync-test"
    log INFO "💡 Alternatively, run: make uv-sync-test"
    exit 1
fi

# Run pre-commit on all files
# This will run: ruff (fix + format), yamlfmt, detect-secrets, and custom secrets scan
pre-commit run --all-files 2>&1 | tee -a "$LOG_FILE"
EXIT_CODE=${PIPESTATUS[0]}

if [ $EXIT_CODE -ne 0 ]; then
    log ERROR "❌ Pre-commit checks failed. Please fix the issues and try again."
    log INFO "💡 You can run individual hooks with: pre-commit run <hook-id>"
    log INFO "💡 Or run on specific files: pre-commit run --files <file1> <file2>"
    exit 1
fi

# Stage any files that were modified by the pre-commit hooks
log INFO "✓ Staging any files modified by pre-commit hooks..."
git add -u

log INFO "✅ Pre-commit checks passed successfully."
log INFO "🎉 All checks completed: Ruff formatting, YAML formatting, and secrets scanning"
exit 0
