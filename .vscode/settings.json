{
    // Tell the Python extension which interpreter to load first
    "python.defaultInterpreterPath": "${workspaceFolder}/.venv/bin/python",
    
     // make the integrated terminal activate the same venv
    "terminal.integrated.env.linux": {
        "VIRTUAL_ENV": "${workspaceFolder}/.venv",
        // commented out to see if default .venv python works
        //"PATH": "${workspaceFolder}/.tools:${env:PATH}",
        "PATH": "${workspaceFolder}/.venv/bin:${env:PATH}",
        "PYTHONHOME": "",
        "PYTHONPATH": ""
    },
    "files.exclude": {
        "**/.venv": true
    },
    "python.analysis.exclude": [
        "**/.venv/**"
    ],
    "search.exclude": {
        "**/.venv": true
    },
    "python.languageServer": "None",
    "python.formatting.provider": "none",
    "python.venvPath": "${workspaceFolder}",
    "python.envFile": "${workspaceFolder}/.env",
    "[python]": {
        "editor.defaultFormatter": "charliermarsh.ruff",
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.organizeImports": "explicit",
            "source.fixAll": "explicit"
        },
    },
    "ruff.lineLength": 120,            // replaces ruff.format.args
    "ruff.fixAll": true,               // enable global auto-fixes
    "ruff.organizeImports": true,
    "githubPullRequests.ignoredPullRequestBranches": [
        "main"
    ],
    "geminicodeassist.inlineSuggestions.enableAuto": false,
    "geminicodeassist.chat.defaultDiffLayout": "Side by side diff",
    "geminicodeassist.chat.defaultCodeBlockDisplay": "Expanded",
    "cursorpyright.analysis.diagnosticSeverityOverrides": {},
    "cursorpyright.analysis.extraPaths": [
        "backend"
    ],
    "cursorpyright.analysis.exclude": [
        "**/.venv/**",
        "**/node_modules/**",
        "**/__pycache__/**"
    ]
}