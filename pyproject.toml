[project]
name = "kri-local-rag"
version = "0.1.0"
description = "A local RAG implementation with Weaviate and Ollama."
authors = [{ name="Kristjan Sillmann"}]
readme = "README.md"
requires-python = ">=3.12"

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
py-modules = ["cli"]
packages = ["backend", "frontend"]

[project.scripts]
kri-local-rag = "cli:main"

[tool.ruff]
line-length = 120
exclude = [".git", "__pycache__", ".venv", "venv", "build", "dist"]

[tool.ruff.lint]
# E203: whitespace-before-punctuation
# W503: line-break-before-binary-operator
# E401: multiple-imports-on-one-line
# E302: expected-2-blank-lines-found-1
# E305: expected-2-blank-lines-after-function-or-class
# E402: module-import-not-at-top-of-file
ignore = ["E203", "E401", "E302", "E305", "E402"]
select = ["E", "F", "W", "T201"]

[tool.ruff.format]
quote-style = "double"

[tool.pytest.ini_options]
addopts = [
    "-ra",
    "-v",
    "--tb=short",
    "--cov=backend",
    "--cov=frontend",
    "--cov-report=term-missing",
    "--cov-report=html:reports/coverage",
]
markers = [
    "slow: Tests that take longer to run (>30s)",
    "docker: Tests requiring a running Docker daemon",
    "external: Tests that require external services (Weaviate, Ollama)",
]
testpaths = [
    "tests/unit",
    "tests/integration",
    "tests/e2e",
]

# Unified logging configuration
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s %(levelname)s %(name)s - %(message)s"
log_cli_date_format = "%Y-%m-%dT%H:%M:%S"
log_file = "reports/test_session.log"
log_file_level = "DEBUG"
log_file_format = "%(asctime)s %(levelname)s %(name)s - %(message)s"
log_file_date_format = "%Y-%m-%dT%H:%M:%S"

[tool.deptry]
# --- Where to read declared dependencies ------------------------------
requirements_files       = ["requirements.txt"]
requirements_files_dev   = ["requirements-dev.txt"]   # only dev tools here

# --- What to scan / skip ----------------------------------------------
# keep default excludes (.venv, .git, tests, etc.) and add a few more
extend_exclude           = ["docs", "dist", "build"]
ignore_notebooks         = true                       # faster on mixed repos

# --- Tell Deptry these folders are *first-party* code ------------------
known_first_party        = ["backend", "frontend", "scripts"]

# --- Handle edge-cases -------------------------------------------------
experimental_namespace_package = true                 # recognise PEP-420 pkgs
# Map weird wheels â†’ import names (example)

# avoids false DEP003 in src-layout
json_output  = "deptry_report.json"      # for CI artifacts

[tool.deptry.package_module_name_map]
python-dotenv = ["dotenv"]
weaviate-client = ["weaviate"]  # if you ever install it optional-only
langchain-community = ["langchain_community"]

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov",
    "pytest-xdist>=3,<4",
    "pytest-mock",
    "pytest-docker",
    "pytest-html",
    "pytest-socket",
    "requests>=2.31,<3",
    "testcontainers[weaviate]",
    "ruff==0.5.3",
    "protobuf>=5.26,<7",
    "rich>=13,<14",
]
docs = ["mkdocs"]
ui = ["pytest-playwright==0.4.4", "playwright>=1.45,<2"]
dev = [
    "pyright[nodejs]==1.1.403"
]

pep621_dev_dependency_groups = ["tests", "docs", "ui", "dev"]

[tool.deptry.per_rule_ignores]
DEP002 = ["boto3"]       # AWS libs pulled in indirectly

[tool.coverage.run]
omit = ["tests/ui/*"]
data_file = "reports/coverage/.coverage"
